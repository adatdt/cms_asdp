<?php
defined('BASEPATH') OR exit('No direct script access allowed');

/**

 * @author     adat <adatdt.@gmail.com>
 * @copyright  2020
 *
 */

class M_pcm_trx_global extends MY_Model{

	public function __construct() {
		parent::__construct();
        $this->_module = 'pelabuhan/pcm_trx_global';

	}

    public function dataList(){
		$start = $this->input->post('start');
		$length = $this->input->post('length');
		$draw = $this->input->post('draw');
		$search = $this->input->post('search');
		$dateTo=$this->input->post('dateTo');
		$dateFrom=$this->input->post('dateFrom');
		$port= $this->enc->decode($this->input->post('port'));
		$time= $this->enc->decode($this->input->post('time'));
		$shipClass= $this->enc->decode($this->input->post('shipClass'));
		$order = $this->input->post('order');
		$order_column = $order[0]['column'];
		$order_dir = strtoupper($order[0]['dir']);
		$iLike        = trim(strtoupper($this->db->escape_like_str($search['value'])));

		
		$field = array(
					0=>"id",
                    1=>"port_name",
                    2=>"ship_class_name",
                    3=>"depart_date",
                    4=>"depart_time",
                    5=>"quota",
                    6=>"total_quota",
                    7=>"used_quota",
                    8=>"total_lm",
		);

		$order_column = $field[$order_column];

		$where = " WHERE a.status not in (-5) and (a.depart_date between '{$dateFrom}' and '{$dateTo}')";

		if(!empty($port))
		{
			$where .="and ( a.port_id='{$port}' )";	
		}

		if(!empty($shipClass))
		{
			$where .="and ( a.ship_class='{$shipClass}' )";	
		}

		if(!empty($time))
		{
			$where .="and ( a.depart_time='{$time}' )";	
		}				

		if(!empty($search['value']))
		{
			$where .="and ( b.name ilike '%".$iLike."%'
							or c.name ilike '%".$iLike."%'
						)";
		}

		$sql 		   = $this->qry($where);

		// $query         = $this->db->query($sql);
		$query         = $this->dbView->query($sql);
		$records_total = $query->num_rows();
		$sql 		  .= " ORDER BY ".$order_column." {$order_dir}";

		if($length != -1){
			$sql .=" LIMIT {$length} OFFSET {$start}";
		}

		// $query     = $this->db->query($sql);
		$query     =$this->dbView->query($sql);
		$rows_data = $query->result();

		$rows 	= array();
		$i  	= ($start + 1);

		foreach ($rows_data as $row) {
			$id_enc=$this->enc->encode($row->id);
			$row->number = $i;
			$nonaktif    = site_url($this->_module."/action_change/".$this->enc->encode($row->id.'|0'));
     		$aktif       = site_url($this->_module."/action_change/".$this->enc->encode($row->id.'|1'));

			$row->id =$row->id;
			$edit_url 	 = site_url($this->_module."/edit/{$id_enc}");
     		$delete_url  = site_url($this->_module."/action_delete/{$id_enc}");

     		$row->actions  =" ";

     		$param =array(
     						'portId'=>$row->port_id,
     						'departTime'=>$row->depart_time,
     						'departDate'=>$row->depart_date,
     						'shipClass'=>$row->ship_class );

     		$getLm=$this->getLmStatus($param);

     		$row->lmTersedia=str_replace(".",",",$getLm->ketersediaan);
     		$row->lmDigunakan=str_replace(".",",",$getLm->sudahdigunain);

     		$row->no=$i;


     		// $row->actions .= generate_button_new($this->_module, 'delete', $delete_url);
 			if($row->depart_date." ".$row->depart_time>=date('Y-m-d H').":00" )
			{

				$row->actions  .= generate_button_new($this->_module, 'edit', $edit_url);
			}
     		// $row->actions .= generate_button_new($this->_module, 'edit', $edit_url);
     		$row->depart_date=empty($row->depart_date)?"":format_date($row->depart_date);

			$rows[] = $row;
			unset($row->assignment_code);

			$i++;
		}

		return array(
			'draw'           => $draw,
			'recordsTotal'   => $records_total,
			'recordsFiltered'=> $records_total,
			'data'           => $rows
		);
	}

	public function select_data($table, $where)
	{
		// return $this->db->query("select * from $table $where");
		return $this->dbView->query("select * from $table $where");
	}

	public function insert_data($table,$data)
	{
		// $this->db->insert($table, $data);
		$this->dbAction->insert($table, $data);
	}

	public function update_data($table,$data,$where)
	{
		$this->dbAction->where($where);
		$this->dbAction->update($table, $data);
	}

	public function delete_data($table,$data,$where)
	{
		$this->dbAction->where($where);
		$this->dbAction->delete($table, $data);
	}

	public function updateData($data)
	{
		$portId=$data['portId'];
		strlen($portId)>1?$idPort=$portId:$idPort="0".$portId;
		$logType=2; // log type 2 data update  yaang berasal dari trx pcm global
		$createCode=$idPort.$logType.date('YmdHIs');

		if($data['action']==1)
		{
			$quota="aa.quota+".$data['quota'];
			$totalQuota="aa.total_quota+".$data['quota'];
			$quotaLimit="aa.quota_limit-".$data['quota'];
			$updatedOn=$data['updated_on'];
			$updatedBy=$data['updated_by'];
			$id=$data['id'];
			$action='Tambah';
		}
		else
		{
			$quota="aa.quota-".$data['quota'];
			$totalQuota="aa.total_quota-".$data['quota'];
			$quotaLimit="aa.quota_limit+".$data['quota'];
			$updatedOn=$data['updated_on'];
			$updatedBy=$data['updated_by'];
			$id=$data['id'];
			$action='Kurang';
		}

		$this->dbAction->query( "
				with updt as (
					update  app.t_trx_quota_pcm_vehicle aa set
					quota=".$quota.", 
					total_quota=".$totalQuota.",
					quota_limit=".$quotaLimit.",
					updated_on='".$updatedOn."',
					updated_by='".$updatedBy."',
					total_lm='".$data['lineMeter']."'

					from  app.t_trx_quota_pcm_vehicle ab
					where aa.id=".$id." and ab.id=".$id."
					returning	ab.port_id,
							ab.ship_class,
							ab.depart_date,
							ab.depart_time,
							aa.quota as quota,
							ab.total_quota as remaining_quota,
							aa.total_quota,
							'".$action."' as action_type,
							1 as status,
							aa.total_lm as lm,
							ab.total_lm as remaining_lm
				)
				insert into app.t_log_update_quota_pcm_vehicle (port_id,
							 ship_class,
							 depart_date,
							 depart_time,
							 quota,
							 remaining_quota,
							 total_quota,
							 action_type,
								status,
							created_on,
							created_by,
							log_type,
							transaction_type,
							transaction_code,
							lm,
							remaining_lm
							) 

				select port_id,
							ship_class,
							depart_date,
							depart_time,
							quota,
							remaining_quota,
							total_quota,
							action_type,
							status,
							'".$updatedOn."',
							'".$updatedBy."',
							2 as log_type,
							'Update' as transaction_type,
							'".$createCode."' as transaction_code,
							lm,
							remaining_lm  					
				from updt			

		 ");
	}

	public function action_edit_import_excel($data,$action,$portId)
	{
		$idData=array();
		strlen($portId)>1?$idPort=$portId:$idPort="0".$portId;
		$logType=2; // log type 1 data update  yaang berasal dari trx pcm global
		$createCode=$idPort.$logType.date('YmdHIs');

		if($action==2) // data yang di kurang
		{
			foreach ($data as $value) {
				$check=$this->select_data("app.t_trx_quota_pcm_vehicle", " where id=".$value['id'])->row();
				
				if(($check->total_quota-$value['quotaInput'])>=0)
				{
					$this->dbAction->query("
						with updt as (
						update app.t_trx_quota_pcm_vehicle a 
							set quota=a.quota-".$value['quotaInput'].",
							total_quota=a.total_quota-".$value['quotaInput'].",
							quota_limit=a.quota_limit+".$value['quotaInput'].",
							total_lm=".$value['lineMeter'].",
							updated_on='".$value['updatedOn']."',
							updated_by='".$value['updatedBy']."' 
						from app.t_trx_quota_pcm_vehicle b 
						where a.id=".$value['id']." and b.id=".$value['id']."
						returning 
							a.port_id,
							a.ship_class,
							a.depart_date,
							a.depart_time,
							b.total_quota as remaining_quota,
							a.total_quota,
							a.total_lm as lm,
							b.total_lm as remaining_lm,
							a.quota 										
						)
						insert into app.t_log_update_quota_pcm_vehicle 
							(port_id,
							ship_class,
							depart_date,
							depart_time,
							quota,
							remaining_quota,
							total_quota,
							action_type,
							status,
							created_on,
							created_by,
							log_type,
							transaction_type,
							transaction_code,
							lm,
							remaining_lm
						) 								
						select
							port_id,
							ship_class,
							depart_date,
							depart_time,
							quota,
							remaining_quota,
							total_quota,
							'Kurang' as action_type,
							1 as status,
							'".$value['updatedOn']."' as created_on,
							'".$value['updatedBy']."' as created_by,
							'2' as log_type,
							'Update_excel' as transaction_type,
							'".$createCode."' as transaction_code,
							lm,
							remaining_lm  
							from updt "
					);
				}
				else
				{
					$idData[]=$value['id']; // tampung data yang tidak ke update
				}

				// $idData[]=$value['id'];
			}			
		}
		else // data yang di Tambah
		{
			foreach ($data as  $value) {

					$this->dbAction->query("
						with updt as (
						update app.t_trx_quota_pcm_vehicle a 
							set quota=a.quota+".$value['quotaInput'].",
							total_quota=a.total_quota+".$value['quotaInput'].",
							quota_limit=a.quota_limit-".$value['quotaInput'].",
							total_lm=".$value['lineMeter'].",
							updated_on='".$value['updatedOn']."',
							updated_by='".$value['updatedBy']."' 
						from app.t_trx_quota_pcm_vehicle b 
						where a.id=".$value['id']." and b.id=".$value['id']."
						returning 
							a.port_id,
							a.ship_class,
							a.depart_date,
							a.depart_time,
							b.total_quota as remaining_quota,
							a.total_quota,
							a.total_lm as lm,
							b.total_lm as remaining_lm,
							a.quota 										
					)
					insert into app.t_log_update_quota_pcm_vehicle 
						(port_id,
						ship_class,
						depart_date,
						depart_time,
						quota,
						remaining_quota,
						total_quota,
						action_type,
						status,
						created_on,
						created_by,
						log_type,
						transaction_type,
						transaction_code,
						lm,
						remaining_lm
					) 								
					select
						port_id,
						ship_class,
						depart_date,
						depart_time,
						quota,
						remaining_quota,
						total_quota,
						'Tambah' as action_type,
						1 as status,
						'".$value['updatedOn']."' as created_on,
						'".$value['updatedBy']."' as created_by,
						'2' as log_type,
						'Update_excel' as transaction_type,
						'".$createCode."' as transaction_code,
						lm,
						remaining_lm  
						from updt "
					);
			}
		}

		$this->session->set_userdata('notUpdated', $idData);
		return $idData;
		

	}
	public function download(){
		
		$dateTo=$this->input->get('dateTo');
		$dateFrom=$this->input->get('dateFrom');
		$port= $this->enc->decode($this->input->get('port'));
		$time= $this->enc->decode($this->input->get('time'));
		$shipClass= $this->enc->decode($this->input->get('shipClass'));
		$iLike        = trim($this->input->get('search'));

	
		$where = " WHERE a.status not in (-5) and (a.depart_date between '{$dateFrom}' and '{$dateTo}')";

		if(!empty($port))
		{
			$where .="and ( a.port_id='{$port}' )";	
		}

		if(!empty($shipClass))
		{
			$where .="and ( a.ship_class='{$shipClass}' )";	
		}

		if(!empty($time))
		{
			$where .="and ( a.depart_time='{$time}' )";	
		}				

		if(!empty($search['value']))
		{
			$where .="and ( b.name ilike '%".$iLike."%'
							or c.name ilike '%".$iLike."%'
						)";
		}

		$where .=" order by a.port_id asc, a.depart_date asc, a.depart_time asc ";

		$sql 		   = $this->qry($where);

		$query     = $this->db->query($sql);


	    $data;
	    foreach ($query->result() as $key => $row ) {

		    $param =array(
					'portId'=>$row->port_id,
					'departTime'=>$row->depart_time,
					'departDate'=>$row->depart_date,
					'shipClass'=>$row->ship_class );

     		$getLm=$this->getLmStatus($param);

	     	$row->lmTersedia=str_replace(".",",",$getLm->ketersediaan);
		    $row->lmDigunakan=str_replace(".",",",$getLm->sudahdigunain);

		    $data[]=$row;

	    	
	    }

		return $data;

	}


	function qry($param)
	{
		$qry="SELECT c.name as ship_class_name,
				b.name as port_name,
				a.* from  app.t_trx_quota_pcm_vehicle a
				left join app.t_mtr_port b on a.port_id=b.id and b.status=1
				left join app.t_mtr_ship_class c on a.ship_class=c.id and c.status=1
				{$param}
			";

		return $qry;
	}

	public function getLmStatus($data)
	{
		$shipClass=$data['shipClass'];
		$departDate=$data['departDate'];
		$departTime=$data['departTime'];
		$portId=$data['portId'];

		return $this->dbView->query("

			SELECT
		    q.depart_date,
		    q.depart_time,
		    q.total_lm,q,ship_class,
		    EXTRACT ( HOUR FROM q.depart_time ) AS hours,
		    (
				COALESCE ( used_quota.used_lm, 0 ) - COALESCE ( expired.used_lm, 0 )) AS sudahdigunain,
				q.total_lm - ( COALESCE ( used_quota.used_lm, 0 ) - COALESCE ( expired.used_lm, 0 )) AS ketersediaan
		  FROM
		    app.t_trx_quota_pcm_vehicle q
		    LEFT JOIN 
			(
				SELECT
				  book.depart_date,
				  EXTRACT ( HOUR FROM pass.depart_time_start ) AS depart_time,
				  COALESCE ( COUNT ( book.ID ), 0 ) AS total,
				  COALESCE ( SUM ( vclass.total_lm ), 0 ) AS used_lm,
				  book.origin 
				FROM
				  app.t_trx_booking book
				  JOIN app.t_trx_booking_vehicle pass ON pass.booking_code = book.booking_code
				  JOIN app.t_mtr_vehicle_class vclass ON vclass.ID = pass.vehicle_class_id 
				WHERE
				  book.depart_date = '".$departDate."' 
				  and book.origin = ".$portId."
				  AND book.status IN ( 0, 1, 2 ) 
				  AND book.ship_class = ".$shipClass." 
				GROUP BY
				  book.depart_date,
				  book.origin,
				  EXTRACT 
					( HOUR FROM pass.depart_time_start ) 
		    ) AS used_quota ON EXTRACT ( HOUR FROM q.depart_time ) = used_quota.depart_time 
		    AND q.depart_date = used_quota.depart_date
		    LEFT JOIN (
		    SELECT
		      book.depart_date,
		      EXTRACT ( HOUR FROM pass.depart_time_start ) AS depart_time,
		      COALESCE ( COUNT ( book.ID ), 0 ) AS total,
		      COALESCE ( SUM ( vclass.total_lm ), 0 ) AS used_lm,
		      book.origin 
		    FROM
		      app.t_trx_booking book
		      JOIN app.t_trx_invoice inv ON inv.trans_number = book.trans_number
		      JOIN app.t_trx_booking_vehicle pass ON pass.booking_code = book.booking_code
		      JOIN app.t_mtr_vehicle_class vclass ON vclass.ID = pass.vehicle_class_id 
		    WHERE
		      inv.status NOT IN ( 2 ) 
		      AND inv.due_date :: TIMESTAMP < now() 
		      AND book.depart_date = '".$departDate."' 
		      and book.origin = ".$portId."
		      AND book.ship_class = ".$shipClass." 
		    GROUP BY
		      book.depart_date,
		      book.origin,
		      EXTRACT ( HOUR FROM pass.depart_time_start ) 
		    ) AS expired ON EXTRACT ( HOUR FROM q.depart_time ) = expired.depart_time 
		    AND q.depart_date = expired.depart_date 
		  WHERE
		    q.depart_date = '".$departDate."' 
			and q.depart_time = '".$departTime."' 
		    AND q.ship_class = ".$shipClass."
		    and q.port_id = ".$portId."
		    and q.status = 1"

		)->row();
	}	
	
}
