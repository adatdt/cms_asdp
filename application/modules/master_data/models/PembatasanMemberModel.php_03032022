<?php
defined('BASEPATH') OR exit('No direct script access allowed');

/**
 * -----------------------
 * -----------------------
 *
 * @author     adat <adatdt@gmail.com>
 * @copyright  2022
 *
 */

class PembatasanMemberModel extends MY_Model{

	public function __construct() {
		parent::__construct();
        $this->_module   = 'master_data/pembatasanMember';
	}

    public function dataList(){
		$start = $this->input->post('start');
		$length = $this->input->post('length');
		$draw = $this->input->post('draw');
		$search = $this->input->post('search');
		$order = $this->input->post('order');
		$order_column = $order[0]['column'];
		$order_dir = strtoupper($order[0]['dir']);
		$searchData=$this->input->post("searchData");
		$searchName=$this->input->post("searchName");
		$dateFrom=$this->input->post("dateFrom");
		$dateTo=$this->input->post("dateTo");
		$iLike        = trim(str_replace(array("'",'"'),"",$searchData));

		
		$field = array(
			0 =>'id',
			1 =>'id',
			2=>"limit_transaction_code",
			3=>"start_date",
			4=>"end_date",
			5=>"limit_type",
			6=>"value",
			7=>"custom_type",
			8=>"custom_value",
			9=>"status",			
		);


		$order_column = $field[$order_column];

		$where = " where status <> -5 ";

		if(empty($dateFrom) and empty($dateTo))
		{
			$where .= " ";
		}
		else if(!empty($dateFrom) and empty($dateTo))
		{
			$where .= " and start_date >='{$dateFrom}' ";
		}
		else if(empty($dateFrom) and !empty($dateTo))
		{
			$where .= " and end_date <= '{$dateTo}' ";
		}
		else
		{
			$where .= " and (start_date >='{$dateFrom}' and   end_date <='{$dateTo}') ";
		}		


		if(!empty($searchData))
		{
			if($searchName=="limitTransactionCode")
			{
				$where .=" and limit_transaction_code ilike '%".$iLike."%' ";
			}

		}		

		$sql 		   = "
						 select * from app.t_mtr_limit_transaction
						 {$where}
					  ";

		// die($sql); exit;

		$query         = $this->db->query($sql);
		$records_total = $query->num_rows();
		$sql 		  .= " ORDER BY ".$order_column." {$order_dir}";

		if($length != -1){
			$sql .=" LIMIT {$length} OFFSET {$start}";
		}

		$query     = $this->db->query($sql);
		$rows_data = $query->result();

		$rows 	= array();
		$i  	= ($start + 1);

		foreach ($rows_data as $row) {
			$id_enc=$this->enc->encode($row->id);
			$row->number = $i;
			$nonaktif    = site_url($this->_module."/action_change/".$this->enc->encode($row->id.'|0'));
     		$aktif       = site_url($this->_module."/action_change_active/".$this->enc->encode($row->id.'|1'));

			$row->id =$row->id;
			$edit_url 	 = site_url($this->_module."/edit/{$id_enc}");
     		$delete_url  = site_url($this->_module."/action_delete/{$id_enc}");

     		$row->actions="";

			$row->add_detail_vehicle="";
			if($row->status == 1)
			{
				$row->status   = success_label('Aktif');
				$row->actions  .= generate_button_new($this->_module, 'edit', $edit_url);
				$row->actions .= generate_button($this->_module, 'delete', '<button class="btn btn-sm btn-danger" onclick="confirmationAction(\'Apakah Anda yakin akan menonaktifkan data ini ?\', \''.$nonaktif.'\')" title="Nonaktifkan"> <i class="fa fa-ban"></i> </button> ');
				$row->add_detail_vehicle .=generate_button_new($this->_module, 'add',  site_url($this->_module."/add_detail_vehicle/".$this->enc->encode($row->id)));
			}
			else
			{
				$row->status   = failed_label('Tidak Aktif');
				$row->actions .= generate_button($this->_module, 'delete', '<button class="btn btn-sm btn-primary" onclick="confirmationAction(\'Apakah Anda yakin mengaktifkan data ini ?\', \''.$aktif.'\')" title="aktifkan"> <i class="fa fa-check"></i> </button> ');
			}

			if(!empty($row->limit_type))
			{
				$row->limit_type= $this->masterLimitType($row->limit_type);
			}
			
			if($row->custom_type=="t")
			{				
				$row->custom_type= success_label("Iya");
			}
			else
			{
				$row->custom_type= failed_label("Tidak");


			}						

     		$row->no=$i;
     		$row->actions .= generate_button_new($this->_module, 'delete', $delete_url);
			$row->start_date=format_date($row->start_date)." ".format_time($row->start_date);
			$row->end_date=format_date($row->end_date)." ".format_time($row->end_date);
			$rows[] = $row;
			unset($row->assignment_code);

			$i++;
		}

		return array(
			'draw'           => $draw,
			'recordsTotal'   => $records_total,
			'recordsFiltered'=> $records_total,
			'data'           => $rows
		);
	}


	public function getDetailMember(){
		$start = $this->input->post('start');
		$length = $this->input->post('length');
		$draw = $this->input->post('draw');
		$vaccineParamId=$this->input->post('vaccineParamId');
		$search = $this->input->post('search');
		$order = $this->input->post('order');
		$order_column = $order[0]['column'];
		$order_dir = strtoupper($order[0]['dir']);
		$limitTransactionCode=$this->input->post('limitTransactionCode');
		// $iLike        = trim(strtoupper($this->db->escape_like_str($search['value'])));
		$iLike        = trim(str_replace(array("'",'"'),"",($search['value'])));

		$searchData=trim(str_replace(array("'",'"'),"",($this->input->post("searchData"))) );
		$searchName=$this->input->post("searchName");

		
		$field = array(
			0 =>'id',
			1=>"email",
			2=>"limit_type", 
			3=>"value",      
			4=>"custom_type",                                                 
			5=>"custom_value",   	
			6=>"status",   			

		);

		$order_column = $field[$order_column];

		$where = " where tmm.id is not null ";

		if(!empty($searchData))
		{
			if($searchName=="email")
			{
				$where .=" and tmm.email ilike '%".$searchData."%' ";
			}

		}	

		$sql 		   = $this->qryDetailLimitMemeber($limitTransactionCode)." ".$where;

		// die($sql); exit;
		$query         = $this->db->query($sql);
		$records_total = $query->num_rows();
		$sql 		  .= " ORDER BY ".$order_column." {$order_dir}";

		if($length != -1){
			$sql .=" LIMIT {$length} OFFSET {$start}";
		}

		$query     = $this->db->query($sql);
		$rows_data = $query->result();

		$rows 	= array();
		$i  	= ($start + 1);

		// search header 
		$dataHeader= $this->select_data("app.t_mtr_limit_transaction"," where limit_transaction_code='{$limitTransactionCode}' ")->row();

		foreach ($rows_data as $row) {
			$id_enc=$this->enc->encode($row->id);
			$row->number = $i;
			$exception    = site_url($this->_module."/action_change_detail_limit_member_except/".$this->enc->encode($limitTransactionCode.'|-5|'.$row->email));
			$limit       = site_url($this->_module."/action_change_detail_limit_member/".$this->enc->encode($limitTransactionCode.'|1|'.$row->email));

			$row->id =$row->id;
			$idDetailMember=$this->enc->encode($row->id_detail_member);
			$edit_url 	 = site_url($this->_module."/edit_detail_pembatasan/{$idDetailMember}");


     		$row->actions="";

			
			if(empty($row->id_detail_member))
			{
				$row->status= failed_label("Pengecualian");
				if($dataHeader->status==1)
				{

					$row->actions .= generate_button($this->_module, 'delete', '<button class="btn btn-sm btn-danger" onclick="myData.confirmationAction2(\'Apakah Anda yakin akan batasi user ini ?\', \''.$limit.'\',\'detailDataTables_'.$limitTransactionCode.'\')" title="Batasi User"> <i class="fa fa-ban"></i> </button> ');
				}
			}
			else
			{
				$row->status= success_label("Pembatasan");
				if($dataHeader->status==1)
				{
					$row->actions .= generate_button($this->_module, 'delete', '<button class="btn btn-sm btn-primary" onclick="myData.confirmationAction2(\'Apakah Anda yakin mengecualikan user ini ?\', \''.$exception.'\',\'detailDataTables_'.$limitTransactionCode.'\')" title="User Pengecualian"> <i class="fa fa-check"></i> </button> ');
					$row->actions  .= generate_button_new($this->_module, 'edit', $edit_url);
				}
			}	
			
			if(!empty($row->limit_type))
			{
				$row->limit_type= $this->masterLimitType($row->limit_type);
			}			
			
			
			if($row->custom_type=="t")
			{
				$row->custom_type= success_label("Iya");
				
			}
			else
			{
				$row->custom_type= failed_label("Tidak");

			}			

     		$row->no=$i;
			

			$rows[] = $row;
			unset($row->assignment_code);

			$i++;
		}

		return array(
			'draw'           => $draw,
			'recordsTotal'   => $records_total,
			'recordsFiltered'=> $records_total,
			'data'           => $rows
		);
	}	

	public function qryDetailLimitMemeber($limitTransactionCode)
	{
		$qry="
			SELECT 
				tmm.id,
				tmm.email ,
				tmltd .value,
				tmltd.limit_type ,
				tmltd.custom_value ,
				tmltd.custom_type ,
				tmltd.id as id_detail_member
			from app.t_mtr_member tmm 
			left join app.t_mtr_limit_transaction_detail tmltd on tmm.email = tmltd .email and tmltd.status =1 
			and tmltd.limit_transaction_code='{$limitTransactionCode}' 			
		";

		return $qry;
	}

	

	public function getUser(){

		$qry="
				select 
					id, 
					email
				from app.t_mtr_member
				order by email asc
		";

		return $this->dbView->query($qry)->result();
	}

	public function select_data($table, $where)
	{
		return $this->db->query("select * from $table $where");
	}

	public function insert_data($table,$data)
	{
		$this->db->insert($table, $data);
	}

	public function insert_detail( $data, $where, $status )
	{

		/*
		$data['limit_transaction_code']      
		$data['start_date']
		$data['end_date']             
		$data['value']
		$data['limit_type']
		$data['custom_value']
		$data['custom_type']
		*/

		
		if(!empty($data['custom_type'])) 
		{
			
			// $addField = " 
			// 	'{$customType}' as custom_type,
			// 	'{$customValue}' as custom_value,
			// ";

			$addField = " 
			'".$data['custom_value']."' as custom_value,
			'".$data['custom_type']."'  as custom_type ,
		";

			$fieldName = " 			
				custom_value,
				custom_type, 
			";
		}
		else
		{
			$addField =" ";
			$fieldName= " ";
		}


		$this->db->query("
			insert into  app.t_mtr_limit_transaction_detail(
				limit_transaction_code,
				 email, 
				 limit_type, 
				 value, 
				 ".$fieldName."
				 status, 
				 created_by, 
				 created_on
				 )
			select 			
				'".$data['limit_transaction_code'] ."' as limit_transaction_code,
				email,
				'".$data['limit_type']."' as limit_type,
				'".$data['value']."' as value,
				".$addField."
				'".$status."' as status,
				'".$this->session->userdata('username')."' as created_by,
				'".date('Y-m-d H:i:s')."' as created_on			
			from
			app.t_mtr_member
			$where 
		");

	}	

	public function insert_data_id($table,$data)
	{
		$this->db->insert($table, $data);
		$id = $this->db->insert_id();

		return $id;
	}	

	public function update_data($table,$data,$where)
	{
		$this->db->where($where);
		$this->db->update($table, $data);
	}

	public function delete_data($table,$data,$where)
	{
		$this->db->where($where);
		$this->db->delete($table, $data);
	}

	public function masterLimitType($index)
	{
		$limitType=array(
			1=>'Per Jam',
			2=>'Per Hari',
			3=>'Per Bulan',
			4=>'Per Tahun',
		);


		return $limitType[$index];
	}

    public function checkOverlaps_23022022($startDate, $endDate)
    {
        $qry="        
            select * from app.t_mtr_limit_transaction
            where 
			(
				(start_date between '{$startDate}' and '{$endDate}')
				or
				(end_date between '{$startDate}' and '{$endDate}')   	
			)		
			and status != '-5'
        ";

		// die($qry); exit;
        return $this->db->query($qry);
    }		


    public function checkOverlaps($startDate, $endDate, $id)
    {
		$where ="";
		if(!empty($id))
		{
			$where .=" and id <> '".$id."'";
		}

        $qry="        
            select * from app.t_mtr_limit_transaction
            where 
			(
				(start_date between '{$startDate}' and '{$endDate}')
				or
				(end_date between '{$startDate}' and '{$endDate}')   	
			)		
			and status = 1
			{$where}
        ";

		// die($qry); exit;
        return $this->db->query($qry);
    }		


}
