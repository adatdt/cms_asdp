<?php
defined ( 'BASEPATH' ) or exit ( 'No direct script access allowed' );


class Device_class extends MY_Controller{
	public function __construct(){
		parent::__construct();

        logged_in();
        $this->load->model('M_deviceclass','device');
        $this->load->model('global_model');
        $this->load->library('log_activitytxt');
        $this->load->library(array('bcrypt'));

        $this->_table    = 'app.t_mtr_device_terminal';
        $this->_username = $this->session->userdata('username');
        $this->_module   = 'device_management/device_class';
	}

	public function index(){   
        checkUrlAccess(uri_string(),'view');
        if($this->input->is_ajax_request()){
            $rows = $this->device->dataList();
            echo json_encode($rows);
            exit;
        }

        $data = array(
            'home'     => 'Home',
            'url_home' => site_url('home'),
            'title'    => 'Perangkat',
            'content'  => 'device_class/index',
            'btn_add'  => generate_button_new($this->_module, 'add',  site_url($this->_module.'/add')),
            'btn_excel'=> generate_button_new($this->_module, 'import_excel',  site_url($this->_module.'/import_excel')),
            'port' =>$this->device->select_data("app.t_mtr_port","where status='1' order by name asc")->result(),
            'ship' =>$this->device->select_data("app.t_mtr_ship","where status='1' order by name asc")->result(),
            'dock' =>$this->device->select_data("app.t_mtr_dock","where status='1' order by name asc")->result(),
            'service'=> $this->device->select_data("app.t_mtr_service","where status='1' order by name asc")->result(),
        );

		$this->load->view('default', $data);
	}

    public function add(){
        validate_ajax();
        $this->global_model->checkAccessMenuAction($this->_module,'add');
        $data['title'] = 'Tambah Perangkat';
        $data['service']=$this->device->select_data("app.t_mtr_service","where status='1' order by name asc")->result();
        $data['port']=$this->device->select_data("app.t_mtr_port","where status='1' order by name asc")->result();
        $data['ship_class']=$this->device->select_data("app.t_mtr_ship_class","where status='1' order by name asc")->result();
        $data['terminal_type']=$this->device->select_data("app.t_mtr_device_terminal_type","where status='1' order by terminal_type_name asc")->result();
        $this->load->view($this->_module.'/add',$data);
    }

    public function action_add()
    {
        validate_ajax();
        $this->global_model->checkAccessMenuAction($this->_module,'add');

        $device_type_id=$this->input->post('device_type_terminal');
        $device_name=trim($this->input->post('device_name'));
        $port=$this->enc->decode($this->input->post('port'));
        $password=$this->bcrypt->hash_password(strtoupper(md5($this->input->post('password'))));


        $get_portcode=$this->device->select_data("app.t_mtr_port"," where id=".$port)->row();

        $code=$this->createCode($get_portcode->port_code, $device_type_id);

        if ($device_type_id==1 || $device_type_id==2 || $device_type_id==4 || $device_type_id==5 || $device_type_id==3 || $device_type_id==12)
        {
            $ship_class=$this->enc->decode($this->input->post('ship_class'));

            $this->form_validation->set_rules('device_type_terminal', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('device_name', 'Nama device', 'required');
            $this->form_validation->set_rules('port', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('password', 'password', 'required');
            $this->form_validation->set_rules('ship_class', 'kelas kapal', 'required');

            $data=array(
                        'terminal_code'=>$code,
                        'terminal_name'=>$device_name,
                        'terminal_type'=>$device_type_id,
                        'port_id'=>$port,
                        'password'=>$password,
                        'ship_class'=>$ship_class,
                );
        }

        // else if($device_type_id==3)
        // {
        //     $this->form_validation->set_rules('device_type_terminal', 'Pelabuhan', 'required');
        //     $this->form_validation->set_rules('device_name', 'Nama device', 'required');
        //     $this->form_validation->set_rules('port', 'Pelabuhan', 'required');
        //     $this->form_validation->set_rules('password', 'password', 'required');

        //     $this->form_validation->set_message('required','%s harus diisi!');

        //     $data=array(
        //             'terminal_code'=>$code,
        //             'terminal_name'=>$device_name,
        //             'terminal_type'=>$device_type_id,
        //             'port_id'=>$port,
        //             'password'=>$password,
        //     );
   
        // }

        else if($device_type_id==7 || $device_type_id==8)
        {
            $dock_id=$this->enc->decode($this->input->post('dock'));
            $ship_class=$this->enc->decode($this->input->post('ship_class'));

            $this->form_validation->set_rules('device_type_terminal', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('device_name', 'Nama device', 'required');
            $this->form_validation->set_rules('port', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('password', 'password', 'required');
            $this->form_validation->set_rules('ship_class', 'Tipe Kapal', 'required');
            $this->form_validation->set_rules('dock', 'dock', 'required');

            $this->form_validation->set_message('required','%s harus diisi!');

            $data=array(
                    'terminal_code'=>$code,
                    'terminal_name'=>$device_name,
                    'terminal_type'=>$device_type_id,
                    'port_id'=>$port,
                    'dock_id'=>$dock_id,
                    'ship_class'=>$ship_class,
                    'password'=>$password,
            );
   
        }

        // $device_type==6
        else if ($device_type_id==6)
        {
            $dock_id=$this->enc->decode($this->input->post('dock'));
            $imei=trim($this->input->post('imei'));
            $ship_class=$this->enc->decode($this->input->post('ship_class'));

            $check_imei=$this->device->select_data($this->_table," where upper(imei)=upper('".$imei."') and status not in (-5) ");

            if($check_imei->num_rows()>0)
            {
                echo $res=json_api(0, "Imei sudah terdaftar");
                exit;
            }

            $this->form_validation->set_rules('device_type_terminal', 'type', 'required');
            $this->form_validation->set_rules('device_name', 'Nama device', 'required'); 
            $this->form_validation->set_rules('port', 'Pelabuhan', 'required'); 
            $this->form_validation->set_rules('password', 'password', 'required');
            $this->form_validation->set_rules('ship_class', 'Tipe Kapal', 'required'); 
            $this->form_validation->set_rules('dock', 'dermaga', 'required'); 
            $this->form_validation->set_rules('imei', 'imei', 'required');

            $this->form_validation->set_message('required','%s harus diisi!');

            $data=array(
                    'terminal_code'=>$code,
                    'terminal_name'=>$device_name,
                    'terminal_type'=>$device_type_id,
                    'port_id'=>$port,
                    'dock_id'=>$dock_id,
                    'ship_class'=>$ship_class,
                    'imei'=>strtoupper($imei),
                    'password'=>$password,
            );
   
        }
        else
        {
            $this->form_validation->set_rules('device_type_terminal', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('device_name', 'Nama device', 'required');
            $this->form_validation->set_rules('port', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('password', 'password', 'required');

            $this->form_validation->set_message('required','%s harus diisi!');

            $data=array(
                    'terminal_code'=>$code,
                    'terminal_name'=>$device_name,
                    'terminal_type'=>$device_type_id,
                    'port_id'=>$port,
                    'password'=>$password,
            );
        }


        $check_name=$this->device->select_data($this->_table," where upper(terminal_name)=upper('".$device_name."') and status=1 ");

        if($this->form_validation->run()===false)
        {
            echo $res=json_api(0, validation_errors());
        }
        else if($check_name->num_rows()>0)
        {
            echo $res=json_api(0, "Nama sudah ada");   
        }
        else
        {
            $this->db->trans_begin();

            $data['status']=1;
            $data['created_on']=date('Y-m-d');
            $data['created_by']=$this->session->userdata('username');

            $this->device->insert_data($this->_table,$data);

            if ($this->db->trans_status() === FALSE)
            {
                $this->db->trans_rollback();
                echo $res=json_api(0, 'Gagal tambah data');
            }
            else
            {
                $this->db->trans_commit();
                echo $res=json_api(1, 'Berhasil tambah device');
            }
        }

    }

    public function edit($id)
    {
        validate_ajax();
        $this->global_model->checkAccessMenuAction($this->_module,'edit');


        $terminal_id=$this->enc->decode($id);
        $get_port_id=$this->device->select_data($this->_table," where device_terminal_id=".$terminal_id)->row();

        $data['title'] = 'Edit Tipe Perangkat';
        $data['port']=$this->device->select_data("app.t_mtr_port","where status='1' order by name asc")->result();
        $data['terminal_type']=$this->device->select_data("app.t_mtr_device_terminal_type","where status='1' order by terminal_type_name asc")->result();
        $data['ship_class']=$this->device->select_data("app.t_mtr_ship_class"," where status=1 order by name asc")->result();
        $data['detail']=$this->device->select_data($this->_table," where device_terminal_id=".$terminal_id)->row();
        $data['dock']=$this->device->select_data("app.t_mtr_dock","where port_id=".$get_port_id->port_id." and status=1 order by name asc")->result();
        $this->load->view($this->_module.'/edit',$data);   
    }

    public function action_edit()
    {
        validate_ajax();
        $this->global_model->checkAccessMenuAction($this->_module,'edit');




        $device_terminal_id=$this->enc->decode($this->input->post('device_terminal_id'));

        $device_type_id=$this->input->post('device_type_terminal');

        $device_name=trim($this->input->post('device_name'));
        $port=$this->enc->decode($this->input->post('port'));


        $get_portcode=$this->device->select_data("app.t_mtr_port"," where id=".$port)->row();

        $code=$this->createCode($get_portcode->port_code, $device_type_id);

        if ($device_type_id==1 || $device_type_id==2 || $device_type_id==4 || $device_type_id==5 || $device_type_id==3 || $device_type_id==12)
        {
            $ship_class=$this->enc->decode($this->input->post('ship_class'));

            $this->form_validation->set_rules('device_type_terminal', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('device_name', 'Nama device', 'required');
            $this->form_validation->set_rules('port', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('ship_class', 'kelas kapal', 'required');

            $data=array(
                        // 'terminal_code'=>$code,
                        'terminal_name'=>$device_name,
                        'terminal_type'=>$device_type_id,
                        'port_id'=>$port,
                        'ship_class'=>$ship_class,
                );
        }

        // else if($device_type_id==3)
        // {
        //     $this->form_validation->set_rules('device_type_terminal', 'Pelabuhan', 'required');
        //     $this->form_validation->set_rules('device_name', 'Nama device', 'required');
        //     $this->form_validation->set_rules('port', 'Pelabuhan', 'required');

        //     $this->form_validation->set_message('required','%s harus diisi!');

        //     $data=array(
        //             'terminal_code'=>$code,
        //             'terminal_name'=>$device_name,
        //             'terminal_type'=>$device_type_id,
        //             'port_id'=>$port,
        //     );
   
        // }

        else if($device_type_id==7 || $device_type_id==8)
        {
            $dock_id=$this->enc->decode($this->input->post('dock'));
            $ship_class=$this->enc->decode($this->input->post('ship_class'));

            $this->form_validation->set_rules('device_type_terminal', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('device_name', 'Nama device', 'required');
            $this->form_validation->set_rules('port', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('ship_class', 'Tipe Kapal', 'required');
            $this->form_validation->set_rules('dock', 'dock', 'required');

            $this->form_validation->set_message('required','%s harus diisi!');

            $data=array(
                    // 'terminal_code'=>$code,
                    'terminal_name'=>$device_name,
                    'terminal_type'=>$device_type_id,
                    'port_id'=>$port,
                    'dock_id'=>$dock_id,
                    'ship_class'=>$ship_class,
            );
   
        }

        // $device_type==6
        else if ($device_type_id==6)
        {
            $dock_id=$this->enc->decode($this->input->post('dock'));
            $imei=$this->input->post('imei');
            $ship_class=$this->enc->decode($this->input->post('ship_class'));

            $check_imei=$this->device->select_data($this->_table," where upper(imei)=upper('".$imei."') and status not in (-5) and device_terminal_id != '".$device_terminal_id ."'");

            if($check_imei->num_rows()>0)
            {
                echo $res=json_api(0, "Imei sudah terdaftar");
                exit;
            }

            $this->form_validation->set_rules('device_type_terminal', 'type', 'required');
            $this->form_validation->set_rules('device_name', 'Nama device', 'required'); 
            $this->form_validation->set_rules('port', 'Pelabuhan', 'required'); 
            $this->form_validation->set_rules('ship_class', 'Tipe Kapal', 'required'); 
            $this->form_validation->set_rules('dock', 'dermaga', 'required'); 
            $this->form_validation->set_rules('imei', 'imei', 'required');

            $this->form_validation->set_message('required','%s harus diisi!');

            $data=array(
                    // 'terminal_code'=>$code,
                    'terminal_name'=>$device_name,
                    'terminal_type'=>$device_type_id,
                    'port_id'=>$port,
                    'dock_id'=>$dock_id,
                    'ship_class'=>$ship_class,
                    'imei'=>strtoupper($imei),
            );
   
        }
        else
        {
            $this->form_validation->set_rules('device_type_terminal', 'Pelabuhan', 'required');
            $this->form_validation->set_rules('device_name', 'Nama device', 'required');
            $this->form_validation->set_rules('port', 'Pelabuhan', 'required');;

            $this->form_validation->set_message('required','%s harus diisi!');

            $data=array(
                    // 'terminal_code'=>$code,
                    'terminal_name'=>$device_name,
                    'terminal_type'=>$device_type_id,
                    'port_id'=>$port,
            );
        }

        if($this->form_validation->run()===false)
        {
            echo $res=json_api(0, 'Data masih ada yang kosong');
        }
        else
        {
            $this->db->trans_begin();

            $data['updated_on']=date('Y-m-d');
            $data['updated_by']=$this->session->userdata('username');
            
            $this->device->update_data($this->_table,$data,"device_terminal_id=$device_terminal_id");

            if ($this->db->trans_status() === FALSE)
            {
                $this->db->trans_rollback();
                echo $res=json_api(0,validation_errors());
            }
            else
            {
                $this->db->trans_commit();
                echo $res=json_api(1, 'Berhasil edit data');
            }   
        }


        /* Fungsi Create Log */
        $createdBy   = $this->session->userdata('username');
        $logUrl      = site_url().'device_management/device_type/action_edit';
        $logMethod   = 'EDIT';
        $logParam    = json_encode($data);
        $logResponse = $res;

        $this->log_activitytxt->createLog($createdBy, $logUrl, $logMethod, $logParam, $logResponse);
    }

    // public function action_edit()
    // {
    //     validate_ajax();
    //     $this->global_model->checkAccessMenuAction($this->_module,'edit');


    //     $device_terminal_id=$this->enc->decode($this->input->post('device_terminal_id'));

    //     $port_id=$this->enc->decode($this->input->post('port'));
    //     $dock_id=$this->enc->decode($this->input->post('dock'));
    //     $ship_class_id=$this->enc->decode($this->input->post('ship_class'));
    //     $device_type_terminal_id=$this->enc->decode($this->input->post('device_type_terminal'));
    //     $device_name=trim($this->input->post('device_name'));
    //     $imei=trim($this->input->post('imei'));
    //     $device_code=trim($this->input->post('device_code'));


    //     $this->form_validation->set_rules('port', 'Pelabuhan', 'required');
    //     $this->form_validation->set_rules('dock', 'Dermaga', 'required');
    //     $this->form_validation->set_rules('ship_class', 'Kelas kapal', 'required');
    //     $this->form_validation->set_rules('device_type_terminal', 'Tipe Perangkat', 'required');
    //     $this->form_validation->set_rules('device_name', 'Nama Perangkat', 'required');
    //     $this->form_validation->set_rules('imei', 'Imei', 'required');
    //     $this->form_validation->set_rules('device_code', 'Kode Perangkat', 'required');
                
    //     $data=array(
    //                 'port_id'=>$port_id,
    //                 'dock_id'=>$dock_id,
    //                 'ship_class'=>$ship_class_id,
    //                 'terminal_type'=>$device_type_terminal_id,
    //                 'terminal_name'=>$device_name,
    //                 'imei'=>$imei,
    //                 'terminal_code'=>$device_code,
    //                 'updated_on'=>date("Y-m-d H:i:s"),
    //                 'updated_by'=>$this->session->userdata('username'),
    //                 );

    //     if($this->form_validation->run()===false)
    //     {
    //         echo $res=json_api(0, 'Data masih ada yang kosong');
    //     }
    //     else
    //     {
    //         $this->db->trans_begin();
    //         $this->device->update_data($this->_table,$data,"device_terminal_id=$device_terminal_id");

    //         if ($this->db->trans_status() === FALSE)
    //         {
    //             $this->db->trans_rollback();
    //             echo $res=json_api(0, 'Gagal edit data ');
    //         }
    //         else
    //         {
    //             $this->db->trans_commit();
    //             echo $res=json_api(1, 'Berhasil edit data');
    //         }   
    //     }

    //     /* Fungsi Create Log */
    //     $createdBy   = $this->session->userdata('username');
    //     $logUrl      = site_url().'device_management/device_type/action_edit';
    //     $logMethod   = 'EDIT';
    //     $logParam    = json_encode($data);
    //     $logResponse = $res;

    //     $this->log_activitytxt->createLog($createdBy, $logUrl, $logMethod, $logParam, $logResponse);
    // }

    public function action_delete($id)
    {
        validate_ajax();
        $this->global_model->checkAccessMenuAction($this->_module,'delete');

        $data=array(
            'status'=>-5,
            'updated_on'=>date("Y-m-d H:i:s"),
            'updated_by'=>$this->session->userdata('username'),
            );

        $team_id = $this->enc->decode($id);

            $this->db->trans_begin();
            $this->schedule->update_data($this->_table,$data,"id=$team_id");

            if ($this->db->trans_status() === FALSE)
            {
                $this->db->trans_rollback();
                echo $res=json_api(0, 'Gagal delete data');
            }
            else
            {
                $this->db->trans_commit();
                echo $res=json_api(1, 'Berhasil delete data');
            }   

        /* Fungsi Create Log */
        $createdBy   = $this->session->userdata('username');
        $logUrl      = site_url().'pelabuhan/schedule/action_delete';
        $logMethod   = 'DELETE';
        $logParam    = json_encode($data);
        $logResponse = $res;

        $this->log_activitytxt->createLog($createdBy, $logUrl, $logMethod, $logParam, $logResponse);
    }

    public function action_change($param)
    {
        validate_ajax();
        $p = $this->enc->decode($param);
        $d = explode('|', $p);

        /* data */
        $data = array(
            'status' => $d[1],
            'updated_on'=>date("Y-m-d H:i:s"),
            'updated_by'=>$this->session->userdata('username'),
        );


        $this->db->trans_begin();
        $this->team_model->update_data($this->_table,$data,"id=".$d[0]);

        if ($this->db->trans_status() === FALSE)
        {
            $this->db->trans_rollback();
            echo $res=json_api(0, 'Gagal non aktif');
        }
        else
        {
            $this->db->trans_commit();
            echo $res=json_api(1, 'Berhasil non aktif data');
        }   

        /* Fungsi Create Log */
        $createdBy   = $this->session->userdata('username');
        $logUrl      = site_url().'shift_management/team/action_delete';
        $logMethod   = 'DELETE';
        $logParam    = json_encode($data);
        $logResponse = $res;

        $this->log_activitytxt->createLog($createdBy, $logUrl, $logMethod, $logParam, $logResponse);
    }

    function create_code()
    {
        $data=$this->db->query("SELECT 
                    SUBSTRING(EXTRACT(YEAR FROM now())::varchar, 3,2)||
                     to_char(EXTRACT(DAY FROM now()), 'fm000')|| 
                    (to_char(nextval('core.t_mtr_team_code_seq'), 'fm0000')) as code ")->row();

        return $data->code;

    }

    public function enable($param)
    {
        validate_ajax();
        $p = $this->enc->decode($param);

        $d = explode('|', $p);

        /* data */
        $data = array(
            'status' => $d[1],
            'updated_on'=>date("Y-m-d H:i:s"),
            'updated_by'=>$this->session->userdata('username'),
        );


            $this->db->trans_begin();
            $this->device->update_data($this->_table,$data,"device_terminal_id=".$d[0]);

            if ($this->db->trans_status() === FALSE)
            {
                $this->db->trans_rollback();
                echo $res=json_api(0, 'Gagal aktifkan data');
            }
            else
            {
                $this->db->trans_commit();
                echo $res=json_api(1, 'Berhasil aktifkan data');
            }


        /* Fungsi Create Log */
        $createdBy   = $this->session->userdata('username');
        $logUrl      = site_url().'shift_management/team/enable';
        $logMethod   = 'Enable';
        $logParam    = json_encode($data);
        $logResponse = $res;

        $this->log_activitytxt->createLog($createdBy, $logUrl, $logMethod, $logParam, $logResponse);
    }

    public function disable($param)
    {
        validate_ajax();
        $p = $this->enc->decode($param);

        $d = explode('|', $p);

        /* data */
        $data = array(
            'status' => $d[1],
            'updated_on'=>date("Y-m-d H:i:s"),
            'updated_by'=>$this->session->userdata('username'),
        );


        $this->db->trans_begin();
        $this->device->update_data($this->_table,$data,"device_terminal_id=".$d[0]);

        if ($this->db->trans_status() === FALSE)
        {
            $this->db->trans_rollback();
            echo $res=json_api(0, 'Gagal dinonaktifkan data');
        }
        else
        {
            $this->db->trans_commit();
            echo $res=json_api(1, 'Data berhasil dinonaktifkan ');
        } 

        /* Fungsi Create Log */
        $createdBy   = $this->session->userdata('username');
        $logUrl      = site_url().'pelabuhan/schedule/enable';
        $logMethod   = 'Disable';
        $logParam    = json_encode($data);
        $logResponse = $res;

        $this->log_activitytxt->createLog($createdBy, $logUrl, $logMethod, $logParam, $logResponse);
    }

    function get_dock()
    {
        $port_id=$this->enc->decode($this->input->post('port'));

        empty($port_id)?$id='NULL':$id=$port_id;

        $row=$this->device->select_data("app.t_mtr_dock","where status=1 and port_id=".$id." order by name asc")->result();

        $data=array();
        foreach ($row as $key => $value) {
            $value->id=$this->enc->encode($value->id);
            $value->name=strtoupper($value->name);

            $data[]=$value;
        }

        echo json_encode($data);
    }

    // function get_service()
    // {
    //     $device_type_terminal_id=$this->enc->decode($this->input->post('device_type_terminal_id'));

    //     empty($device_type_terminal_id)?$id='NULL':$id=$device_type_terminal_id;

    //     $data=$this->device->select_data("app.t_mtr_device_terminal_type","where terminal_type_id=".$id."")->row();

    //     if(!empty($data))
    //     {
    //         $data->service_id==1?$tipe="REGULER":$tipe="EKSEKUTIF";
    //         echo json_encode($tipe);
    //     }
    //     else
    //     {
    //         echo json_encode("");
    //     }
        
    // }

    function createCode($port_code, $device_type_id)
    {
        if(strlen($device_type_id)>1)
        {
            $front_code=$device_type_id."".$port_code;
        }
        else
        {
            $front_code="0".$device_type_id."".$port_code;
        }

        $total=strlen($front_code);


        $chekCode=$this->db->query("select * from app.t_mtr_device_terminal where left(terminal_code,".$total.")='".$front_code."' ")->num_rows();

        if($chekCode<1)
        {
            $shelterCode=$front_code."001";
            return $shelterCode;
        }
        else
        {
            $max=$this->db->query("select max (terminal_code) as max_code from app.t_mtr_device_terminal where left(terminal_code,".$total.")='".$front_code."' ")->row();
            $kode=$max->max_code;
            $noUrut = (int) substr($kode, strlen($front_code), 3);
            $noUrut++;
            $char = $front_code;
            $kode = $char . sprintf("%03s", $noUrut);
            return $kode;
        }
    }

}
