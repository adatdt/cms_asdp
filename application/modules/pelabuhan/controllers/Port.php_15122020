<?php
defined ( 'BASEPATH' ) or exit ( 'No direct script access allowed' );

class Port extends MY_Controller{
	public function __construct(){
		parent::__construct();

        logged_in();
        $this->load->model('port_model');
        $this->load->model('global_model');

        $this->_table    = 'app.t_mtr_port';
        $this->_username = $this->session->userdata('username');
        $this->_module   = 'pelabuhan/port';
	}

	public function index(){   
        checkUrlAccess(uri_string(),'view');
        if($this->input->is_ajax_request()){
            $rows = $this->port_model->portList();
            echo json_encode($rows);
            exit;
        }

        $data = array(
            'home'     => 'Home',
            'url_home' => site_url('home'),
            'title'    => 'Pelabuhan',
            'content'  => 'port/index',
            'btn_add'  => generate_button_new($this->_module, 'add',  site_url($this->_module.'/add'))
        );

		$this->load->view('default', $data);
	}

    public function add(){
        validate_ajax();
        $data['title'] = 'Tambah Pelabuhan';
        $this->load->view($this->_module.'/add',$data);
    }

    public function action_add(){
        validate_ajax();
        $this->global_model->checkAccessMenuAction($this->_module,'add');

        $post = $this->input->post();
        $name = strtoupper($post['name']);
        $city = strtoupper($post['city']);
        $profit_center = strtoupper($post['profit_center']);

        /* validation */
        $this->form_validation->set_rules('name', 'Nama Pelabuhan', 'trim|required');
        $this->form_validation->set_rules('city', 'Nama Kota', 'trim|required');
        $this->form_validation->set_rules('profit_center', 'Kode Profit Center', 'trim|required');
        $this->form_validation->set_message('required','%s harus diisi!');
        /* data post */
        $data = array(
            'name' => $name,
            'city' => $city,
            'profit_center' => $profit_center,
            'port_code'=>$this->createCode(),
        );

        $check = $this->global_model->checkData($this->_table,array('UPPER(name)' => $name));

        if($this->form_validation->run() == FALSE){
            $response = json_api(0,validation_errors());
        }elseif($check){
            $response =  json_api(0,'Nama Pelabuhan '.$name.' Sudah Ada'); 
        }else{
            $query = $this->global_model->saveData($this->_table, $data);
            if($query){
                $response = json_api(1,'Simpan Data Berhasil');
            }else{
                $response = json_encode($this->db->error()); 
            }
        }

        $this->log_activitytxt->createLog($this->_username, uri_string(), 'insert', json_encode($data), $response); 
        echo $response;
    }

    public function edit($param){
        validate_ajax();

        $data['id']    = $param;
        $data['row']   = $this->global_model->selectById($this->_table, 'id', $this->enc->decode($param));
        $data['title'] = 'Edit Pelabuhan';
        $this->load->view($this->_module.'/edit',$data);
    }

    public function action_edit(){
        validate_ajax();

        // cek aksees
        $this->global_model->checkAccessMenuAction($this->_module,'edit');

        $post = $this->input->post();
        $name = strtoupper($post['name']);
        $city = strtoupper($post['city']);
        $profit_center = strtoupper($post['profit_center']);

        /* validation */
        $this->form_validation
        ->set_rules('id', 'ID Pelabuhan', 'trim|required')
        ->set_rules('name', 'Nama Pelabuhan', 'trim|required')
        ->set_rules('city', 'Nama Kota', 'trim|required')
        ->set_rules('profit_center', 'Kode Profit Center', 'trim|required');
        $this->form_validation->set_message('required','%s harus diisi!');

        $id = $this->enc->decode($post['id']);

        /* data post */
        $data = array(
            'id' => $id,
            'name' => $name,
            'city' => $city,
            'profit_center' => $profit_center
        );

        $check = $this->global_model->checkData(
            $this->_table,
            array('UPPER(name)' => $name),
            'id',$id
        );

        if($this->form_validation->run() == FALSE){
            $response = json_api(0,validation_errors());
        }elseif($check){
            $response =  json_api(0,'Nama Pelabuhan '.$post['name'].' Sudah Ada'); 
        }else{
            $query = $this->global_model->updateData($this->_table, $data, 'id');
            if($query){
                $response = json_api(1,'Update Data Berhasil');
            }else{
                $response = json_encode($this->db->error()); 
            }
        }

        $this->log_activitytxt->createLog($this->_username, uri_string(), 'update', json_encode($data), $response); 
        echo $response;
    }

    public function action_delete($param){
        validate_ajax();

        // cek aksees
        $this->global_model->checkAccessMenuAction($this->_module,'delete');

        $id   = $this->enc->decode($param);

        /* data */
        $data = array(
            'id' => $id,
            'status' => -5
        );

        $query = $this->global_model->updateData($this->_table, $data, 'id');
        if($query){
            $response = json_api(1,'Delete Data Berhasil');
        }else{
            $response = json_encode($this->db->error()); 
        }

        $this->log_activitytxt->createLog($this->_username, uri_string(), 'delete', json_encode($data), $response); 
        echo $response;
    }

    public function action_change($param){
        validate_ajax();
        $p = $this->enc->decode($param);
        $d = explode('|', $p);

        /* data */
        $data = array(
            'id' => $d[0],
            'status' => $d[1]
        );

        $query = $this->global_model->updateData($this->_table, $data, 'id');
        if($query){
            $response = json_api(1,'Update Status Berhasil');
        }else{
            $response = json_encode($this->db->error()); 
        }

        $this->log_activitytxt->createLog($this->_username, uri_string(), 'change_status', json_encode($data), $response); 
        echo $response;
    }

    function createCode()
    {

        $max=$this->db->query("select max (port_code) as max_code from app.t_mtr_port")->row();
        $kode=$max->max_code;
        $noUrut = (int) substr($kode, 0, 3);
        $noUrut++;
        $kode = sprintf("%03s", $noUrut);
        return $kode;
    }
}
